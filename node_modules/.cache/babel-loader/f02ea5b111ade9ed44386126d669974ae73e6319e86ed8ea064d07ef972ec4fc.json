{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\foodie\\\\src\\\\Pages\\\\Usermenu\\\\Profile\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport Sidebar from './Sidebar';\nimport Name from '../Name';\nimport Order from './Order';\nimport Payments from './Payments';\nimport Address from './Address';\nimport Settings from './Settings';\nimport './Sidebar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [selectedPage, setSelectedPage] = useState('orders'); // Default to 'orders'\n\n  // Sync the state with the URL on initial load\n  useEffect(() => {\n    const path = location.pathname.split('/').pop();\n    if (path) {\n      setSelectedPage(path);\n    }\n  }, [location.pathname]);\n\n  // Update the URL whenever the selected page changes\n  useEffect(() => {\n    navigate(`/profile/${selectedPage}`);\n  }, [selectedPage, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(Name, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-body\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        setSelectedPage: setSelectedPage,\n        selectedPage: selectedPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main\",\n        children: selectedPage === 'orders' ? /*#__PURE__*/_jsxDEV(Order, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this) : selectedPage === 'payments' ? /*#__PURE__*/_jsxDEV(Payments, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this) : selectedPage === 'addresses' ? /*#__PURE__*/_jsxDEV(Address, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this) : selectedPage === 'settings' ? /*#__PURE__*/_jsxDEV(Settings, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Order, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(Profile, \"6GOaOrB3Jl9kS5dqBOVVTy8ec88=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","Sidebar","Name","Order","Payments","Address","Settings","jsxDEV","_jsxDEV","Profile","_s","navigate","location","selectedPage","setSelectedPage","path","pathname","split","pop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Projects/foodie/src/Pages/Usermenu/Profile/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useNavigate, useLocation } from 'react-router-dom'\r\nimport Sidebar from './Sidebar'\r\nimport Name from '../Name'\r\nimport Order from './Order'\r\nimport Payments from './Payments'\r\nimport Address from './Address'\r\nimport Settings from './Settings'\r\n\r\nimport './Sidebar.css'\r\n\r\nconst Profile = () => {\r\n    const navigate = useNavigate()\r\n    const location = useLocation()\r\n    const [selectedPage, setSelectedPage] = useState('orders') // Default to 'orders'\r\n\r\n    // Sync the state with the URL on initial load\r\n    useEffect(() => {\r\n        const path = location.pathname.split('/').pop()\r\n        if (path) {\r\n            setSelectedPage(path)\r\n        }\r\n    }, [location.pathname])\r\n\r\n    // Update the URL whenever the selected page changes\r\n    useEffect(() => {\r\n        navigate(`/profile/${selectedPage}`)\r\n    }, [selectedPage, navigate])\r\n\r\n    return (\r\n        <div className='profile-container'>\r\n            <Name />\r\n            <div className='profile-body'>\r\n                <Sidebar setSelectedPage={setSelectedPage} selectedPage={selectedPage} />\r\n                <div className='main'>\r\n                    {selectedPage === 'orders' ? (\r\n                        <Order />\r\n                    ) : selectedPage === 'payments' ? (\r\n                        <Payments />\r\n                    ) : selectedPage === 'addresses' ? (\r\n                        <Address />\r\n                    ) : selectedPage === 'settings' ? (\r\n                        <Settings />\r\n                    ) : (\r\n                        <Order />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}