{"ast":null,"code":"import jwtDecode from 'jwt-decode';\nexport const isUserLoggedIn = () => {\n  const token = localStorage.getItem('token');\n  let isLoggedIn = false;\n  if (token) {\n    try {\n      const decodedToken = jwtDecode(token);\n      isLoggedIn = true;\n    } catch (error) {\n      console.error('Invalid token:', error);\n    }\n  }\n  return isLoggedIn;\n};","map":{"version":3,"names":["jwtDecode","isUserLoggedIn","token","localStorage","getItem","isLoggedIn","decodedToken","error","console"],"sources":["E:/foodie/src/util.js"],"sourcesContent":["import jwtDecode from 'jwt-decode'\r\n\r\nexport const isUserLoggedIn = () => {\r\n    const token = localStorage.getItem('token')\r\n    let isLoggedIn = false\r\n    if (token) {\r\n        try {\r\n            const decodedToken = jwtDecode(token)\r\n            isLoggedIn = true\r\n        } catch (error) {\r\n            console.error('Invalid token:', error)\r\n        }\r\n    }\r\n    return isLoggedIn\r\n}\r\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,YAAY;AAElC,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAChC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIC,UAAU,GAAG,KAAK;EACtB,IAAIH,KAAK,EAAE;IACP,IAAI;MACA,MAAMI,YAAY,GAAGN,SAAS,CAACE,KAAK,CAAC;MACrCG,UAAU,GAAG,IAAI;IACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IAC1C;EACJ;EACA,OAAOF,UAAU;AACrB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}