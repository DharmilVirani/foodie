{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dharmil\\\\Desktop\\\\ReactProjects\\\\foodie\\\\src\\\\Pages\\\\Login\\\\Signup.js\",\n  _s = $RefreshSig$();\nimport { Button, Checkbox } from 'antd';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport InputField from '../../Components/InputField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const history = useHistory();\n  const [input, setInput] = useState({\n    username: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [error, setError] = useState({\n    username: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [rememberMe, setRememberMe] = useState(true);\n  const myFunction = e => {\n    setRememberMe(e.target.checked);\n  };\n  const inputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setInput({\n      ...input,\n      [name]: value\n    });\n    validateInput(e);\n  };\n  const validateInput = e => {\n    let {\n      name,\n      value\n    } = e.target;\n    setError({\n      ...error,\n      [name]: value ? '' : 'Required field'\n    });\n    if (value && name.toLowerCase().includes('password') && input.password && input.confirmPassword) {\n      setError({\n        ...error,\n        [name]: input.password !== input.confirmPassword ? 'Password and Confirm Password does not match.' : ''\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-card-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-card-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-card-title\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-card-field\",\n        children: /*#__PURE__*/_jsxDEV(InputField, {\n          name: \"username\",\n          value: input.username,\n          label: \"Username\",\n          error: error.username,\n          placeholder: \"Username...\",\n          onChange: inputChange,\n          onBlur: validateInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-card-field\",\n        children: /*#__PURE__*/_jsxDEV(InputField, {\n          name: \"password\",\n          value: input.password,\n          label: \"Password\",\n          error: error.password,\n          placeholder: \"Password...\",\n          onChange: inputChange,\n          onBlur: validateInput,\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-card-field\",\n        children: /*#__PURE__*/_jsxDEV(InputField, {\n          name: \"confirmPassword\",\n          value: input.confirmPassword,\n          label: \"Confirm Password\",\n          error: error.confirmPassword,\n          placeholder: \"Confirm Password...\",\n          onChange: inputChange,\n          onBlur: validateInput,\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-card-field\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: rememberMe,\n          onChange: myFunction,\n          children: \"Remember Me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-card-field\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            width: '100%'\n          }\n          // TODO:\n          ,\n          onClick: () => {\n            if (error.username || error.password || error.confirmPassword) return;\n            localStorage.setItem('token', true);\n            if (rememberMe) localStorage.setItem('user', JSON.stringify(input));else localStorage.removeItem('user');\n            history.push('/');\n          },\n          type: \"primary\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-card-field\",\n        children: [\"Want to explore ??\\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-card-field\",\n        children: [\"Already have an account ??\\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(Signup, \"kovWK7xQ49HOVz6WbXB2xnWQTDg=\", false, function () {\n  return [useHistory];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["Button","Checkbox","React","useState","Link","useHistory","InputField","jsxDEV","_jsxDEV","Signup","_s","history","input","setInput","username","password","confirmPassword","error","setError","rememberMe","setRememberMe","myFunction","e","target","checked","inputChange","name","value","validateInput","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","label","placeholder","onChange","onBlur","type","style","width","onClick","localStorage","setItem","JSON","stringify","removeItem","push","to","_c","$RefreshReg$"],"sources":["C:/Users/dharmil/Desktop/ReactProjects/foodie/src/Pages/Login/Signup.js"],"sourcesContent":["import { Button, Checkbox } from 'antd'\r\nimport React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport InputField from '../../Components/InputField'\r\n\r\nconst Signup = () => {\r\n    const history = useHistory()\r\n    const [input, setInput] = useState({\r\n        username: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n    })\r\n\r\n    const [error, setError] = useState({\r\n        username: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n    })\r\n    const [rememberMe, setRememberMe] = useState(true)\r\n\r\n    const myFunction = (e) => {\r\n        setRememberMe(e.target.checked)\r\n    }\r\n\r\n    const inputChange = (e) => {\r\n        const { name, value } = e.target\r\n        setInput({\r\n            ...input,\r\n            [name]: value,\r\n        })\r\n        validateInput(e)\r\n    }\r\n\r\n    const validateInput = (e) => {\r\n        let { name, value } = e.target\r\n        setError({ ...error, [name]: value ? '' : 'Required field' })\r\n        if (value && name.toLowerCase().includes('password') && input.password && input.confirmPassword) {\r\n            setError({\r\n                ...error,\r\n                [name]: input.password !== input.confirmPassword ? 'Password and Confirm Password does not match.' : '',\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='login-card-container'>\r\n            <div className='login-card-content'>\r\n                <div className='login-card-title'>Sign Up</div>\r\n                <div className='login-card-field'>\r\n                    <InputField\r\n                        name='username'\r\n                        value={input.username}\r\n                        label='Username'\r\n                        error={error.username}\r\n                        placeholder='Username...'\r\n                        onChange={inputChange}\r\n                        onBlur={validateInput}\r\n                    />\r\n                </div>\r\n                <div className='login-card-field'>\r\n                    <InputField\r\n                        name='password'\r\n                        value={input.password}\r\n                        label='Password'\r\n                        error={error.password}\r\n                        placeholder='Password...'\r\n                        onChange={inputChange}\r\n                        onBlur={validateInput}\r\n                        type='password'\r\n                    />\r\n                </div>\r\n                <div className='login-card-field'>\r\n                    <InputField\r\n                        name='confirmPassword'\r\n                        value={input.confirmPassword}\r\n                        label='Confirm Password'\r\n                        error={error.confirmPassword}\r\n                        placeholder='Confirm Password...'\r\n                        onChange={inputChange}\r\n                        onBlur={validateInput}\r\n                        type='password'\r\n                    />\r\n                </div>\r\n                <div className='login-card-field'>\r\n                    <Checkbox checked={rememberMe} onChange={myFunction}>\r\n                        Remember Me\r\n                    </Checkbox>\r\n                </div>\r\n                <div className='login-card-field'>\r\n                    <Button\r\n                        style={{ width: '100%' }}\r\n                        // TODO:\r\n                        onClick={() => {\r\n                            if (error.username || error.password || error.confirmPassword) return\r\n                            localStorage.setItem('token', true)\r\n                            if (rememberMe) localStorage.setItem('user', JSON.stringify(input))\r\n                            else localStorage.removeItem('user')\r\n                            history.push('/')\r\n                        }}\r\n                        type='primary'\r\n                    >\r\n                        Sign Up\r\n                    </Button>\r\n                </div>\r\n                <div className='login-card-field'>\r\n                    Want to explore ??&nbsp;\r\n                    <Link to='/'>Home</Link>\r\n                </div>\r\n                <div className='login-card-field'>\r\n                    Already have an account ??&nbsp;\r\n                    <Link to='/login'>Login</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}